#!/usr/bin/perl

##
## Copyright 2008 Adriana Lukas & Alec Muffett
##
## Licensed under the Apache License, Version 2.0 (the "License"); you
## may not use this file except in compliance with the License. You
## may obtain a copy of the License at
##
## http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
## implied. See the License for the specific language governing
## permissions and limitations under the License.
##

# performs a sweep of perl scripts given as arguments, looking for
# undefined function calls

$pkg = "";
while (<>) {
    if (/^\s*package\s+(\w+)/o) {
	$pkg = " package $1";
    }

    push(@lines, [ $_, "$ARGV:$.$pkg" ] );
    if (eof) {
	close ARGV; # reset $.
	$pkg = "";
    }
}

foreach $input (@lines) {
    ($line, $debug) = @{$input};

    $line =~ s!#.*!!o;

    if ($line =~ /^\s*sub\s+(\w+)/o) {
	push(@{$defns{$1}}, $debug);
    }

    while ($line =~ s!\&(\w+)!!o) {
	push(@{$calls{$1}}, $debug);
    }

    while ($line =~ s!->(\w+)!!o) {
	push(@{$calls{$1}}, $debug);
    }
}

print "-- checking definition\n";

foreach $call (sort keys %calls) {
    $ndefns = ($#{$defns{$call}} + 1);
    @xdefns = @{$defns{$call}};

    $ncalls = ($#{$calls{$call}} + 1);
    @xcalls = @{$calls{$call}};

    if ($ndefns == 0) {
	print "$call undefined, called at:\n\t";
	print join("\n\t", @xcalls);
	print "\n\n";
    }
    elsif ($ndefns > 1) {
	print "$call defined $ndefns times:\n\t";
	print join("\n\t", @xdefns);
	print "\n\n";
    }

}
print "\n";

print "-- checking usage\n";

foreach $defn (sort keys %defns) {
    $ncalls = ($#{$calls{$defn}} + 1);
    @xcalls = @{$calls{$defn}};

    $ndefns = ($#{$defns{$defn}} + 1);
    @xdefns = @{$defns{$defn}};

    if ($ncalls == 0) {
	print "$defn uncalled, defined at:\n\t";
	print join("\n\t", @xdefns);
	print "\n\n";
    }
    elsif (0 && ($ncalls > 1)) {
	print "$defn called $ncalls times:\n\t";
	print join("\n\t", @xcalls);
	print "\n\n";
    }

}
print "\n";

